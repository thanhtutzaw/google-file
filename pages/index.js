import Head from 'next/head';
import { useEffect, useState } from 'react';
import { BiArrowBack } from 'react-icons/bi';
import { IoMdClose } from 'react-icons/io';
import Card from '../component/Card';
import useSound from 'use-sound';
import boopSfx from '/public/click.mp3';
import uncheckSound from '/public/disable-sound.mp3';
import checkSound from '/public/enable-sound.mp3';
import styles from '../styles/Home.module.css';

function Selectbar(props) {
  const [play] = useSound(boopSfx);
  return (
    <>
      <div className={styles.trashNav_count}>
        <IoMdClose onClick={(e) => { props.setselectedId([]); props.playOff() }} className={styles.backBtn} />
        <div>
          <p>{props.length} selected</p>
          <p>{props.total} GB</p>
        </div>
      </div>
      <button onClick={play} className={styles.deleteBtn}>Delete</button>
    </>
  );
}
function Backbar() {
  return (<div className={styles.trashNav_count}>
    <BiArrowBack className={styles.backBtn} />
    <div>
      <p>Trash</p>
    </div>
  </div>);
}


export default function Home() {
  const files = [
    {
      "id": 1,
      "filename": "name1",
      "size": "5 GB"
    },
    {
      "id": 2,
      "filename": "name2",
      "size": "1 GB"
    },
    {
      "id": 3,
      "filename": "name3",
      "size": "20 GB"
    }
  ];
  const [selectedId, setselectedId] = useState([]);
  const [isChecked, setisChecked] = useState(false);
  const [total, settotal] = useState('');
  useEffect(() => {
    console.log(isChecked)
    const totalArray = []
    // let total
    for (let i = 0; i < selectedId.length; i++) {
      let total = files.filter(f => f.id === selectedId[i])
      totalArray.push(total[0])
    }
    const calculatedValue = totalArray.map(file => parseInt(file.size)).reduce((prev, current) => prev + current, 0)
    settotal(calculatedValue)
    // if (selectedId.length === 0) {
    //   setisChecked(false)
    // } else {
    //   setisChecked(true)
    // }
    if (selectedId.length >= 1) {
      setisChecked(true)
    } else {
      setisChecked(false)
    }
  }, [selectedId, isChecked]);

  function allSelect() {
    setisChecked(prev => !prev)

    // const items = []
    // for (let i = 0; i < files.length; i++) {
    //   const id = files[i].id
    //   items.push(id)
    // }
    const items = files.map(file => file.id)
    setselectedId(items)

    if (isChecked) {
      setselectedId([])
    }
  }

  const visible = selectedId.length >= 1

  const [playOn] = useSound(checkSound,
    { volume: 0.11 })
  const [playOff] = useSound(uncheckSound,
    { volume: 0.11 })

  return (
    <>
      <Head>
        <title>Google File âœ¨</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.container}>
          <div style={{ position: 'sticky', top: '0', zIndex: '2000' }}>
            <section
              className={[styles.SelectNav, !visible ? styles.inactive : styles.active].join(" ")}>
              <Selectbar playOff={playOff} setisChecked={setisChecked} total={total} length={selectedId.length} setselectedId={setselectedId} selectedId={selectedId} />
            </section>
            <section
              className={[styles.trashNav, visible ? styles.inactive : styles.active].join(" ")}>
              <Backbar />
            </section>
            <label onMouseUp={() => !isChecked ? playOn() : playOff()} className={styles.allSelect} >
              {isChecked ? "Deselect All" : "All Select"}
              <input id="checkbox_id" onChange={allSelect} checked={isChecked} style={{ Accentcolor: 'green' }} type="checkbox" ></input>
            </label>
          </div>
          <ul>
            {files.map((f) => (
              <Card playOn={playOn} playOff={playOff} setisChecked={setisChecked} files={files} f={f} key={f.id} setselectedId={setselectedId} selectedId={selectedId} />
            ))}
          </ul>
        </div>
      </main>
    </>
  )
}